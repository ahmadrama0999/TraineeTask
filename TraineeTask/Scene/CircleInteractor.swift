//
//  CircleInteractor.swift
//  TraineeTask
//
//  Created by Ramin Akhmad on 13.07.2020.
//  Copyright (c) 2020 Ramin Akhmad. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CircleBusinessLogic
{
  func sendRequest(request: Circle.Something.Request)
}

protocol CircleDataStore
{
  //var name: String { get set }
}

class CircleInteractor: CircleBusinessLogic, CircleDataStore
{
  var presenter: CirclePresentationLogic?
  var worker: CircleWorker?
  private var arrayData = [WeatherResponse]()
  
  // MARK: Do something
  
  func sendRequest(request: Circle.Something.Request)
  {
    worker = CircleWorker()
    worker?.doSomeWork()
    
    WeatherService().getWeather(cityName: request.cityName){ ( response ) in
        self.arrayData.removeAll()
        self.arrayData.append(response)
        let response = Circle.Something.Response(weatherData: self.arrayData)
        self.presenter?.presentSomething(response: response)
    }
//    let response = Circle.Something.Response(weatherData: arrayData)
//    presenter?.presentSomething(response: response)
  }
}
